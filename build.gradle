plugins {
    id "com.energizedwork.webdriver-binaries" version "1.4"
}

project.group 'kazurayam.com'
project.version '0.1'

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'

ext {
    // The drivers we want to use
    drivers = ["firefox", "chrome", "chromeHeadless"]
    ext {
        groovyVersion = '2.4.9'
        logbackVersion = '1.2.3'
        slf4jVersion = '1.7.2'
        gebVersion = '2.1'
        seleniumVersion = '3.13.0'
        chromeDriverVersion = '2.40'   // 2.35.528161 in Katalon Studio 5.4.2
        geckoDriverVersion = '0.21.0'  // 0.19.0 in Katalon Studio 5.4.2
        MaterialsVersion = '0.13'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    compile group: 'ch.qos.logback', name: 'logback-core', version: "${logbackVersion}"

    testCompile group: 'com.kazurayam', name: 'Materials', version: "${MaterialsVersion}"

    // https://mvnrepository.com/artifact/org.spockframework/spock-core
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "${seleniumVersion}"

    testCompile "org.gebish:geb-spock:${gebVersion}"
    testCompile "org.gebish:geb-junit4:${gebVersion}"

    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
}

webdriverBinaries {
    geckodriver geckoDriverVersion
    chromedriver chromeDriverVersion
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP
        outputs.upToDateWhen { false }  // Always run tests
        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def defaultEncoding = 'UTF-8'

test.outputs.upToDateWhen {false}

test {
    include '**/material/demo/*Spec.class'
}

task pinpoint(type: Test) {
    include '**/material/demo/GebishOrgSpec.class'
}

// run firefoxTest or run chromeTest
firefoxTest {
    include '**/material/demo/GebishOrgSpec.class'
}

chromeTest {
    include '**/material/demo/GebishOrgSpec.class'
}

tasks.withType(Test) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}
